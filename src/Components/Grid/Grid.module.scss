.grid {
    display: flex;
    flex-direction: column;
    justify-content: center;

    border: 12px solid var(--ui-colors-cell);
    border-radius: 8px;
    user-select: none;

    // using this trick to keep widths / heights to whole numbers:
    // https://stackoverflow.com/questions/37754542/css-calc-round-down-with-two-decimal-cases/64921523#64921523
    // --shf: 4.9406564584124654e-324;

    // we calculate a cell size and make sure it's a whole number that's divisible by grid width
    // NOTE: we add pixels if we want gaps
    // --cell-size-intermediate: calc(max(20px, (min(60vw, 60vh) / 16)) *  var(--shf) / var(--shf));
    // --cell-size-expert: calc(max(20px, (min(80vw, 80vh) / 30)) *  var(--shf) / var(--shf));

    --cell-size-beginner: 40px;
    --cell-size-intermediate: 24px;
    --cell-size-expert: 20px;
}

.row {
    display: flex;
    flex-direction: row;
    background-color: var(--ui-colors-cell-shown);
}

.header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    
    height: 40px;

    background-color: var(--ui-colors-cell);
    padding-bottom: 12px;
}

.settings {
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: center;

    flex: 2;
}

.minesLeft {
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: center;

    flex: 2;
    background-color: var(--ui-colors-black);
    color: var(--ui-colors-mines-left);
    margin-right: 6px;

    font-weight: bold;
    font-size: 1.5em;

    border: 2px inset var(--ui-colors-cell);
    border-radius: 4px;
}

.timeLeft {
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: center;
    
    flex: 2;
    background-color: var(--ui-colors-black);
    color: var(--ui-colors-time-left);
    margin-left: 6px;

    font-weight: bold;
    font-size: 1.5em;

    border: 2px inset var(--ui-colors-cell);
    border-radius: 4px;
}